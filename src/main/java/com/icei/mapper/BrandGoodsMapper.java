package com.icei.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.icei.domain.BrandGoods;

/**
 * 
 * @author YU生俱来
 *
 */
public interface BrandGoodsMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table brand_goods
	 *
	 * @mbg.generated Thu Apr 19 10:27:54 CST 2018
	 */
	int deleteByPrimaryKey(Integer goodsId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table brand_goods
	 *
	 * @mbg.generated Thu Apr 19 10:27:54 CST 2018
	 */
	int insert(BrandGoods record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table brand_goods
	 *
	 * @mbg.generated Thu Apr 19 10:27:54 CST 2018
	 */
	int insertSelective(BrandGoods record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table brand_goods
	 *
	 * @mbg.generated Thu Apr 19 10:27:54 CST 2018
	 */
	BrandGoods selectByPrimaryKey(Integer goodsId);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table brand_goods
	 *
	 * @mbg.generated Thu Apr 19 10:27:54 CST 2018
	 */
	int updateByPrimaryKeySelective(BrandGoods record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table brand_goods
	 *
	 * @mbg.generated Thu Apr 19 10:27:54 CST 2018
	 */
	int updateByPrimaryKey(BrandGoods record);
	/**
	 * 个人中心关注的商品
	 *
	 * @param userId
	 * @return
	 */
	List<BrandGoods> getUserLikeGoods(@Param("userId") int userId);

	/**
	 * 前台首页商品展示方法
	 * @param typeId
	 * @return
	 */
	List<BrandGoods> byTypeIdGetGoodsInfo(int typeId);

	/**
	 * 判断店铺是否存在该商品
	 * @param brandid
	 * @param goodsid
	 * @return
	 */
	int selectByhotid(@Param("brandid") int brandid, @Param("goodsid") int goodsid);

	/**
	 * 得到该商品的满意总人数
	 * @return
	 */
	int getAssessCount(int goodsId);
	/**
	 * 前台首页商品显示
	 * @return
	 */
	List<BrandGoods> byTypeIdGetGoodsInfos();
	/**
	 * 查询全部商品
	 * @return
	 */
	List<BrandGoods> GetGoodsInfos();
	/**
	 * 根据店铺ID查询全部商品
	 * @return
	 */
	List<BrandGoods> ByBrandIdGetGoodsInfos(Integer brandId);
	
	
	
	List<BrandGoods> selectAllmsg(@Param("page") int page, @Param("limit") int limit,
			@Param("typeDetailId") int typeDetailId, @Param("goodsId") int goodsId,@Param("typeid")int typeid);

	
	int selectAllmsgCount(@Param("typeDetailId") int typeDetailId, @Param("goodsId") int goodsId,@Param("typeid")int typeid);

	List<BrandGoods> selectByBrandId(@Param("brandId") Integer brandId, @Param("keyword") String keyword,@Param("start")Integer start,@Param("end")Integer end);

	Integer selectCountByBrandId(@Param("brandId") Integer brandId, @Param("keyword") String keyword);
}